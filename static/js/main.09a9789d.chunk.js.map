{"version":3,"sources":["components/Card/Card.js","components/Wrapper/index.js","components/Header/index.js","components/Footer/Footer.js","App.js","index.js"],"names":["Card","props","className","alt","name","src","image","onClick","checkIfClicked","id","Wrapper","children","Header","currentScore","topScore","Footer","class","App","state","images","bind","clickedCard","this","filter","card","imagesCopy","slice","sort","a","b","Math","random","clicked","resetimagesCopy","map","setState","findIndex","key","Component","ReactDOM","render","document","getElementById"],"mappings":"wxEAgBeA,G,MAZF,SAAAC,GAAK,OACV,yBAAKC,UAAY,iBACb,yBAAKA,UAAY,iBACb,yBACAC,IAAK,iBAAmBF,EAAMG,KAC9BC,IAAKJ,EAAMK,MACXC,QAAW,kBAAMN,EAAMO,eAAeP,EAAMQ,W,MCH7CC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCU1BC,G,MAXC,SAAAX,GAAK,OACnB,yBAAKC,UAAY,kBACf,yBAAKA,UAAY,+DACf,wBAAIA,UAAY,cAAhB,kBAA6CD,EAAMY,aAAnD,iBAA+EZ,EAAMa,WAEvF,yBAAKZ,UAAY,wBACf,+C,OCCSa,G,MANA,SAAAd,GAAK,OAClB,yBAAKC,UAAU,UACb,uBAAGc,MAAM,0BAAT,oBAAmD,qCAAnD,+DCiEWC,E,YA9DX,WAAYhB,GAAQ,IAAD,8BACnB,4CAAMA,KACDiB,MAAQ,CACTC,OAAOA,EACPL,SAAS,EACTD,aAAa,GAEjB,EAAKL,eAAiB,EAAKA,eAAeY,KAApB,gBAPH,E,4EASRX,GAEX,IAAIY,EAAcC,KAAKJ,MAAMC,OAAOI,QAAO,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,KAAI,GAC/DgB,EAAaH,KAAKJ,MAAMC,OAAOO,QAAQC,MAAK,SAASC,EAAGC,GAAG,MAAO,GAAMC,KAAKC,YAEjF,GAAIV,EAAYW,QAWT,CAEH,IAAIC,EAAkBR,EAAWS,KAAI,SAACV,GAClC,MAAO,CACHf,GAAGe,EAAKf,GACRH,MAAMkB,EAAKlB,MACX0B,SAAS,MAIjBV,KAAKa,SAAS,CACVhB,OAAOc,EACPpB,aAAc,SAtBlBQ,EAAYW,SAAU,EAEtBP,EAAWA,EAAWW,WAAU,SAACZ,GAAD,OAAUA,EAAKf,KAAOA,MAAOY,EAC7DC,KAAKa,SAAS,CAEVhB,OAAQM,EAERZ,aAAcS,KAAKJ,MAAML,aAAe,EACxCC,SAAWQ,KAAKJ,MAAML,aAAe,EAAIS,KAAKJ,MAAMJ,SAAWQ,KAAKJ,MAAML,aAAe,EAAIS,KAAKJ,MAAMJ,a,+BAkB1G,IAAD,OACD,OACI,yBAAKZ,UAAY,aACb,kBAAC,EAAD,CAAQW,aAAgBS,KAAKJ,MAAML,aAAcC,SAAUQ,KAAKJ,MAAMJ,WAC1E,kBAAC,EAAD,KACSQ,KAAKJ,MAAMC,OAAOe,KAAI,SAAAV,GAAI,OACnB,kBAAC,EAAD,CAGAhB,eAAgB,EAAKA,eACrBC,GAAIe,EAAKf,GACT4B,IAAKb,EAAKf,GACVH,MAAOkB,EAAKlB,YAI5B,kBAAC,EAAD,W,GA3DMgC,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.09a9789d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\n// set properties\nconst Card = props => (    \n        <div className = \"card hvr-grow\">\n            <div className = \"img-container\">\n                <img \n                alt={\"This is image \" + props.name} \n                src={props.image} \n                onClick = {() => props.checkIfClicked(props.id)}\n                />\n            </div>\n        </div>\n    );\n\nexport default Card;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n const Header = props => (\n  <div className = \"main-container\">\n    <nav className = \"navbar sticky-top navbar-light bg-light justify-content-end\">\n      <h5 className = \"text-muted\">Current Score: {props.currentScore} | Top Score: {props.topScore}</h5>\n    </nav>\n    <div className = \"jumbotron text-muted\">\n      <h1>Memory Game</h1>\n    </div>\n  </div>\n )\n\nexport default Header;\n","import React from \"react\";\nimport \"./Footer.css\";\n\n// set the footer to a copyright string\nconst Footer = props => (\n  <div className=\"footer\">\n    <p class=\"text-muted text-center\">Images featuring <i>Disney</i> characters are the property of their respective owners.</p>\n  </div>\n);\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport images from \"./images.json\";\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {  \n     //setting this.state.images to the images.json array\n    constructor(props) {\n    super(props);\n    this.state = {\n        images:images,\n        topScore:0,\n        currentScore:0\n    };\n    this.checkIfClicked = this.checkIfClicked.bind(this);\n}\ncheckIfClicked(id)  {\n    //variables\n    let clickedCard = this.state.images.filter(card => card.id === id)[0];\n    let imagesCopy = this.state.images.slice().sort(function(a, b){return 0.5 - Math.random()});\n    //if card hasn't been clicked, set to true\n    if(!clickedCard.clicked) {\n        clickedCard.clicked = true;\n        //shuffle the images\n        imagesCopy[imagesCopy.findIndex((card) => card.id === id)] = clickedCard;\n        this.setState({\n            //set the new array\n            images: imagesCopy,\n            //change scores\n            currentScore: this.state.currentScore + 1,\n            topScore: (this.state.currentScore + 1 > this.state.topScore ? this.state.currentScore + 1 : this.state.topScore)\n        });\n    } else {\n           //reset the game \n        let resetimagesCopy = imagesCopy.map((card) => {\n            return {\n                id:card.id,\n                image:card.image,\n                clicked: false,\n            }\n        });\n        //reset the score\n        this.setState({\n            images:resetimagesCopy,\n            currentScore: 0,\n        });\n    }\n}\nrender() {\n        return (\n            <div className = \"container\">\n                <Header currentScore = {this.state.currentScore} topScore={this.state.topScore}/>\n            <Wrapper>\n                    {this.state.images.map(card => (\n                            <Card\n                            //FINALLY FOUND OUT THERE WAS A TYPO IN THE LINE BELOW\n                            //checkifClicked --> checkIfClicked WOWWWWWW\n                            checkIfClicked={this.checkIfClicked}\n                            id={card.id}\n                            key={card.id}\n                            image={card.image}\n                            />\n                ))}\n            </Wrapper>\n            <Footer />\n            </div>\n        );\n    }\n}\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}